{
	"info": {
		"_postman_id": "914cf354-4569-4998-88be-794456b2f16f",
		"name": "QA Academy Server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22933873"
	},
	"item": [
		{
			"name": "Health",
			"item": [
				{
					"name": "/health",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "/auth/login user_one",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    pm.environment.set(\"authToken\", pm.response.json().token)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"user_one\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/login user_two",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    pm.environment.set(\"authToken\", pm.response.json().token)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"user_two\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/login admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    pm.environment.set(\"authToken\", pm.response.json().token)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Books",
			"item": [
				{
					"name": "/books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let respBody;",
									"",
									"pm.test(\"Should verify status code\", () => {",
									"    pm.response.to.have.status(200);",
									"    respBody = pm.response.json();",
									"    console.log(respBody);",
									"});",
									"",
									"pm.test(\"Should verify type of title\", () => {",
									"    respBody.data.map(item => {",
									"        pm.expect(item.title).to.be.a(\"string\");",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "/books/[id]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let respBody;",
									"",
									"pm.test(\"Should verify status code\", () => {",
									"    pm.response.to.have.status(200);",
									"    respBody = pm.response.json();",
									"    console.log(respBody);",
									"});",
									"",
									"pm.test(\"Should verify type of title\", () => {",
									"    respBody.data.map(item => {",
									"        pm.expect(item.title).to.be.a(\"string\");",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/books/{{new_book_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								"{{new_book_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"author\": \"Philip K. Dick\",\n    \"title\": \"Man from The High Castle\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "/books/[id]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let respBody;",
									"",
									"pm.test(\"Should verify status code\", () => {",
									"    pm.response.to.have.status(200);",
									"    respBody = pm.response.json();",
									"});",
									"",
									"pm.test(\"Should verify updated author value\", () => {",
									"    pm.expect(respBody.author).to.eql(pm.collectionVariables.get(\"author\"));",
									"})",
									"",
									"pm.test(\"Should verify updated title value\", () => {",
									"    pm.expect(respBody.title).to.eql(pm.collectionVariables.get(\"title\"));",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var new_book_id = pm.collectionVariables.get(\"new_book_id\");",
									"console.log(new_book_id)",
									"pm.test(\"Check if the book id is not empty\", () => {",
									"    pm.expect(new_book_id).is.not.null;});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin-token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "author",
								"value": "Olga Tokarczuk",
								"type": "text"
							},
							{
								"key": "title",
								"value": "Empuzjon",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"author\": \"Olga Tokarczuk\",\n    \"title\": \"Empuzjon\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/books/{{new_book_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								"{{new_book_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/books/rent/[id]",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/books/rent/[id]",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								"rent",
								"[id]"
							]
						}
					},
					"response": []
				},
				{
					"name": "/books/return/[id]",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/books/return/[id]",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								"return",
								"[id]"
							]
						}
					},
					"response": []
				},
				{
					"name": "/books/[id]",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/books/[id]",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								"[id]"
							]
						}
					},
					"response": []
				},
				{
					"name": "/books/rented-books",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/books/rented-books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								"rented-books"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{user_one-token}}{{user_two-token}}{{admin-token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://0.0.0.0:8080",
			"type": "default"
		},
		{
			"key": "admin-token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_one-token",
			"value": "",
			"type": "string"
		},
		{
			"key": "new_book_id",
			"value": "{{new_book_id))"
		},
		{
			"key": "user_two-token",
			"value": "",
			"type": "string"
		}
	]
}
